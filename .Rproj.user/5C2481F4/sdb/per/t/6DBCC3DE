{
    "contents" : "# This file contains 3 functions which are used together to interpolate the hourly temperature values\n# from the daily max and min\n#\n# The function temp_till_9am is used to temperatures for time up to and including 9am. With the function\n# temp_after_9am used for the later times. The main function extracts the mean max and min temperatures from\n# the closest BOM weather station and uses the first to functions to extract the hourly temperatures.\n#\n# temperature_interpolation\n#\n# Inputs: Postcode,MonthDay,Postcode Latitdes and Longitudes (pcode_lats_and_longs),\n# Historical BOM daily temperature parameters (bom_temps), BOM Weather Station Locations (bom_locs)\n# \n# Outputs: Hourly temperature values of the selected Month/Day combination\n#\n#\n# Simple Cosine function obtained from USAFETAC/PR-91/017, A Method for Estimating Missing Hourly Temperatures Using Daily Maximum and\n# Minimum Temperatures, August 1991, by William R Schaub Jr.\n\n\ntemp_till_9am <- function(hour,max,min){\n  \n  # Simple cosine temperature model\n  Thr <-  -(max-min)/2*cos(hour*pi/9) + (max +min)/2\n  \n  return(Thr)\n  \n}\n\ntemp_after_9am <-function(hour,max,min){\n  \n  # Simple cosine temperature model  \n  Thr <- (max-min)/2*cos((hour-10)*pi/13) + (max +min)/2\n  \n}\n\n\n\n\ntemperature_interpolation <- function(Postcode,MonthDay,pcode_lats_and_longs,bom_temps,bom_locs){\n\n\n  # Extract latitude and longitude from our desired postcode\n  Latitude <- pcode_lats_and_longs[which(Postcode==pcode_lats_and_longs$POA),3]\n  Longitude <- pcode_lats_and_longs[which(Postcode==pcode_lats_and_longs$POA),2]  \n  \n  # Extract Month and Day from MonthDay string\n  Month <- substr(MonthDay,1,2)\n  Day <- substr(MonthDay,4,5)\n  \n  # Finds closest weather station and extract it's name\n  row.match <- which(abs(as.numeric(bom_locs$Lat)-Latitude)+abs(as.numeric(bom_locs$Lon)-Longitude)==min(abs(as.numeric(bom_locs$Lat)-Latitude))+abs(as.numeric(bom_locs$Lon)-Longitude))\n  station.name <- as.character(bom_locs[row.match,1])\n  \n  # Extract which temperature values correspond to that stations name as well as the desired month and day\n  df1<-bom_temps[which(toupper(bom_temps$Name)==station.name),]\n  df1 <-df1[which(df1$Month==as.numeric(Month)),]\n  df1 <-df1[which(df1$Day==as.numeric(Day)),]\n  \n  # Extract the max and min daily values\n  dfmax <-df1[which((df1$Variable=='MAXT')),]\n  dfmin <-df1[which((df1$Variable=='MINT')),]\n  \n  \n  mean_max_temp <- mean(dfmax$Value)\n  mean_min_temp <- mean(dfmin$Value)\n  \n# Apply early hour function\nearly_hours <- seq(0,9)\nearly_hours_temps <- sapply(early_hours, function(x) temp_till_9am(x,mean_max_temp,mean_min_temp))\n\n# Apply later hour function\nlater_hours <- seq(10,23)\nlater_hours_temps <- sapply(later_hours, function(x) temp_after_9am(x,mean_max_temp,mean_min_temp))\n\n\ndaily_temps <-c(early_hours_temps,later_hours_temps)\n\n# Return temperature values for all hours\nreturn(daily_temps)\n  \n}",
    "created" : 1432210327009.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1906427801",
    "id" : "6DBCC3DE",
    "lastKnownWriteTime" : 1431259038,
    "path" : "C:/SolarPVUWA/R/temperature_interpolation.R",
    "project_path" : "R/temperature_interpolation.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}